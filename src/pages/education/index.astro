---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import { EDUCATION } from "@consts"

const collection = await getCollection("education")

collection.sort((a, b) => new Date(b.data.dateStart).getTime() - new Date(a.data.dateStart).getTime())

const education = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render()
    return { ...item, Content }
  })
)

function formatWorkDate(input: Date | string) {
  if (typeof input === "string") return input

  const month = input.toLocaleDateString("en-US", {
    month: "short",
  })

  const year = new Date(input).getFullYear()
  return `${month} ${year}`
}
---

<PageLayout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {EDUCATION.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <ol class="animate relative border-s border-gray-200 dark:border-gray-700">  
      { 
        education.map((entry) => (                
        <li class="mb-10 ms-6">
          <span class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -start-3 ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900">
            <svg class="w-2.5 h-2.5 text-blue-800 dark:text-blue-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
              <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"/>
            </svg>
          </span>

          <h3 class="flex items-center mb-1 text-lg font-semibold text-gray-900 dark:text-white">
            {entry.data.institution}
          </h3>

          <time class="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
            {formatWorkDate(entry.data.dateStart)} - {formatWorkDate(entry.data.dateEnd)}
          </time>

          <details class="group">
            <summary class="mb-2 cursor-pointer text-base font-normal text-gray-500 dark:text-gray-400 hover:underline">
              {entry.data.qualification}
            </summary>
            <article class="prose dark:prose-invert">
              <entry.Content />
            </article>
          </details>
        </li>
      ))
    }
  </ol>
  </BottomLayout>
</PageLayout>
